set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(NOT IOS)
    add_library(ftp SHARED ftplib.cpp)
    set_target_properties(ftp PROPERTIES VERSION 1.0.0)
    set_target_properties(ftp PROPERTIES SOVERSION 1)
endif()

if(NOT ANDROID AND NOT IOS)
    set_target_properties(ftp PROPERTIES PUBLIC_HEADER ftplib.h)
endif()

if(ANDROID)
    message(STATUS "Building ftp library for Android ...")
    set(OPENSSL_INCLUDE_DIRS $ENV{HOME}/Android/android_openssl/ssl_3/include)
    set(OPENSSL_SSL_LIBRARY $ENV{HOME}/Android/android_openssl/ssl_3/${ANDROID_ABI})
    include_directories(${OPENSSL_INCLUDE_DIRS})
    target_link_libraries(ftp -L${OPENSSL_SSL_LIBRARY} ssl_3 crypto_3)
elseif(IOS)
    message(STATUS "Building ftp library for iOS ...")
    add_library(ftp STATIC ftplib.cpp)

    if(DEFINED $ENV{EXT_LIB_PATH})
        set(EXT_LIB_PATH $ENV{EXT_LIB_PATH})
    else()
        set(EXT_LIB_PATH $ENV{HOME}/SDKs)
    endif()

    if(${CMAKE_OSX_SYSROOT} MATCHES "iphonesimulator")
        set(OPENSSL_INCLUDE_DIRS ${EXT_LIB_PATH}/openssl/ssl_3/iossim/include)
        set(OPENSSL_SSL_LIBRARY ${EXT_LIB_PATH}/openssl/ssl_3/iossim/lib)
    else()
        set(OPENSSL_INCLUDE_DIRS ${EXT_LIB_PATH}/openssl/ssl_3/ios64/include)
        set(OPENSSL_SSL_LIBRARY ${EXT_LIB_PATH}/openssl/ssl_3/ios64/lib)
    endif()
    link_directories(${OPENSSL_SSL_LIBRARY})
    include_directories(${OPENSSL_INCLUDE_DIRS})
    message(STATUS "OpenSSL: include dir at ${OPENSSL_INCLUDE_DIRS}")
    message(STATUS "OpenSSL: libraries at ${OPENSSL_SSL_LIBRARY}")
elseif(APPLE)
    message(STATUS "Building ftp library for OSx ...")
    include_directories(/usr/local/include)
    link_directories(/usr/local/lib)
    find_package(OpenSSL REQUIRED)

    if(${OpenSSL_FOUND})
        message(STATUS "OpenSSL: Version ${OPENSSL_VERSION}")
        message(STATUS "OpenSSL: include dir at ${OPENSSL_INCLUDE_DIR}")
        message(STATUS "OpenSSL: libraries at ${OPENSSL_LIBRARIES} ${OPENSSL_SSL_LIBRARIES}")
    endif()

    target_link_libraries(ftp OpenSSL::SSL)
else()
    message(STATUS "Building ftp library for other OS ...")
    find_package(OpenSSL REQUIRED)
    target_link_libraries(ftp OpenSSL::SSL)
endif()

if(NOT ANDROID AND NOT IOS)
    include(GNUInstallDirs)
    install(TARGETS ftp
            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
            PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
endif()
